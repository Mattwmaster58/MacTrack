"""updated/created fields for username

Revision ID: f471ed435c79
Revises: 168a52c3a3ba
Create Date: 2023-08-15 22:51:23.286815

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f471ed435c79"
down_revision: Union[str, None] = "168a52c3a3ba"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("filter", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False)
        )
        batch_op.add_column(
            sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False)
        )
        batch_op.drop_column("notification_type")

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column("username", existing_type=sa.VARCHAR(), nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column("username", existing_type=sa.VARCHAR(), nullable=True)

    with op.batch_alter_table("filter", schema=None) as batch_op:
        batch_op.add_column(sa.Column("notification_type", sa.VARCHAR(), nullable=False))
        batch_op.drop_column("updated_at")
        batch_op.drop_column("created_at")

    # ### end Alembic commands ###
